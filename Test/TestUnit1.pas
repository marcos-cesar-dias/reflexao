unit TestUnit1;
{

  Delphi DUnit Test Case
  ----------------------
  This unit contains a skeleton test case class generated by the Test Case Wizard.
  Modify the generated code to correctly setup and call the methods from the unit 
  being tested.

}

interface

uses
  TestFramework, System.SysUtils, Vcl.Graphics, Vcl.StdCtrls, Winapi.Windows,
  System.Variants, System.TypInfo, System.Classes, Vcl.Dialogs, Vcl.Controls, Vcl.Forms,
  Winapi.Messages, Unit1;

type
  // Test methods for class TReflexao

  TestTReflexao = class(TTestCase)
  strict private
    FReflexao: TReflexao;
  public
    procedure SetUp; override;
    procedure TearDown; override;
  published
    procedure ListComponentsCheck;
  end;

  type TPessoa = class(TPersistent)
  private
    FCodigo: Integer;
    FNome: String;
    procedure SetCodigo(const Value: Integer);
    procedure SetNome(const Value: String);

  published
    property Nome: String read FNome write SetNome;
    property Codigo: Integer read FCodigo write SetCodigo;
  end;

implementation

procedure TestTReflexao.ListComponentsCheck;
  var memo: TStrings;
    pessoa : TPessoa;
begin
  memo := TStringList.Create;
  pessoa := TPessoa.Create;
  TReflexao.ListComponentProperties( Pessoa , memo );

  Check( memo.Count > 1, 'Erro ao buscar propriedades.' );

end;

procedure TestTReflexao.SetUp;
begin
  FReflexao := TReflexao.Create;
end;

procedure TestTReflexao.TearDown;
begin
  FReflexao.Free;
  FReflexao := nil;
end;

{ TPessoa }

procedure TPessoa.SetCodigo(const Value: Integer);
begin
  FCodigo := Value;
end;

procedure TPessoa.SetNome(const Value: String);
begin
  FNome := Value;
end;

initialization
  // Register any test cases with the test runner
  RegisterTest(TestTReflexao.Suite);

end.

